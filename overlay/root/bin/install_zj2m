#!/usr/bin/env bash

# shellcheck disable=SC1091
. /etc/rc.subr && load_rc_config zwavejs2mqtt

if [ ! $(which jq) ] || [ ! $(which yarn) ]; then
  pkg install -y jq yarn-node14
fi

: "${updateDevices:-}"
: "${zwavejs:='https://github.com/zwave-js/node-zwave-js/archive/master.tar.gz'}"

workdir="$(mktemp -dt build_src)"

get_latest_release() {
  local tarball_url
  local release="https://api.github.com/repos/zwave-js/zwavejs2mqtt/releases/latest"
  tarball_url="$(curl -s ${release} | grep tarball_url | cut -d : -f 2,3 | tr -d \",)"
  echo -ne "\nDownloading latest release..."
  # shellcheck disable=SC2086
  curl -sL ${tarball_url} | tar -xzf - -C "${workdir}"
  cd "${workdir}"/*zwavejs2mqtt* || goodbye 1 "failed to get release" ; echo " OK"
}

build_zj2m() {
  ## This build function is based on zwavejs2mqtt/docker/Dockerfile
  yarn config set unsafe-perm true && yarn install --network-timeout=300000
  yarn install --ignore-optional
  if [ -n "${updateDevices}" ]; then
    echo -n "updating devices..."
    curl -sL ${zwavejs} | tar -xzf - \
      --strip=5 -C './node_modules/@zwave-js/config/config/devices' \
      "node-zwave-js-master/packages/config/config/devices/" ; echo " ok"
  fi
  yarn run build \
    && yarn remove $(cat package.json | jq -r '.devDependencies | keys | join(" ")')
  rm -rf -- \
      build \
      docker \
      docs \
      index.html \
      kubernetes \
      kustomization.yaml \
      package-lock.json \
      package.sh \
      src \
      static\
      store \
      stylesheets
  ## Remove all (dot) .files and .folders from build_src/*zwavejs2mqtt*
  find . -mindepth 1 -name '.*' -exec rm -rf -- "{}" +
}

install_zj2m() {
  local app_dir="${zwavejs2mqtt_app_dir:-/usr/local/share/zwavejs2mqtt}"
  ## If it's enabled and running, stop the zwavejs2mqtt service and set it to restart
  if sysrc zwavejs2mqtt_enable &>/dev/null && service zwavejs2mqtt status &>/dev/null; then
    local restart='YES' ; echo
    service zwavejs2mqtt stop || goodbye 1 "failed to stop service"
  fi ## If present, remove the existing app_directory
  if [ -d "${app_dir}" ]; then
    rm -rf -- "${app_dir}"
  fi ## Install the app_directory, copy build_src/*zwavejs2mqtt* to it, and chown it
  install -d -m 775 -- "${app_dir}" && cp -R . "${app_dir}" \
    && chown -R "${zwavejs2mqtt_user:-root}":"${zwavejs2mqtt_group:-wheel}" "${app_dir}"
  ## Restart the service, if it was previously set to do so
  if [ "${restart}" == 'YES' ]; then
    service zwavejs2mqtt start || goodbye 1 "failed to restart service"
  fi
}

goodbye() {
  rm -rf -- "${workdir}"
  echo "${2:-}" ; exit "${1:-0}"
} ; trap goodbye 1 2 3 6

get_latest_release \
  && build_zj2m \
  && install_zj2m
goodbye
